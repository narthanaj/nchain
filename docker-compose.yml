version: '3.8'

services:
  # Full blockchain node with API
  blockchain-node:
    build: .
    container_name: blockchain-node
    ports:
      - "8080:8080"  # API port
      - "9000:9000"  # P2P port
    environment:
      - RUST_LOG=info
      - BLOCKCHAIN_CONFIG=/etc/blockchain/blockchain.toml
    volumes:
      - blockchain-data:/var/lib/blockchain/data
      - blockchain-logs:/var/lib/blockchain/logs
      - ./config/production.toml:/etc/blockchain/blockchain.toml:ro
    networks:
      - blockchain-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/blockchain/info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Dedicated mining node
  blockchain-miner:
    build: .
    container_name: blockchain-miner
    ports:
      - "8081:8080"  # API port (different from main node)
      - "9001:9000"  # P2P port (different from main node)
    environment:
      - RUST_LOG=info
      - BLOCKCHAIN_CONFIG=/etc/blockchain/blockchain.toml
    volumes:
      - blockchain-miner-data:/var/lib/blockchain/data
      - blockchain-miner-logs:/var/lib/blockchain/logs
      - ./config/miner.toml:/etc/blockchain/blockchain.toml:ro
    networks:
      - blockchain-network
    restart: unless-stopped
    depends_on:
      - blockchain-node
    command: ["blockchain", "node", "--api-port", "8080", "--p2p-port", "9000"]

  # Development node (only for development)
  blockchain-dev:
    build: .
    container_name: blockchain-dev
    ports:
      - "8082:8080"  # API port
      - "9002:9000"  # P2P port
    environment:
      - RUST_LOG=debug
      - BLOCKCHAIN_CONFIG=/etc/blockchain/blockchain.toml
    volumes:
      - blockchain-dev-data:/var/lib/blockchain/data
      - blockchain-dev-logs:/var/lib/blockchain/logs
      - ./config/development.toml:/etc/blockchain/blockchain.toml:ro
      - .:/workspace:ro  # Mount source code for development
    networks:
      - blockchain-network
    restart: unless-stopped
    profiles:
      - development
    command: ["blockchain", "node", "--api-port", "8080", "--p2p-port", "9000"]

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: blockchain-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - blockchain-network
    depends_on:
      - blockchain-node
    restart: unless-stopped
    profiles:
      - production

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: blockchain-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - blockchain-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: blockchain-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - blockchain-network
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  blockchain-data:
    driver: local
  blockchain-logs:
    driver: local
  blockchain-miner-data:
    driver: local
  blockchain-miner-logs:
    driver: local
  blockchain-dev-data:
    driver: local
  blockchain-dev-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  blockchain-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16