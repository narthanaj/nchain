name: build

on: [push, pull_request]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Cache Dependencies & Build Outputs
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Nightly Toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install Rust Stable Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Check Code Format
        run: cargo fmt --all -- --check
        shell: bash

      - name: Code Lint
        run: cargo clippy --all-targets --all-features --workspace -- -D warnings
        shell: bash

      - name: Code Lint Without Default Features
        run: cargo clippy --no-default-features --workspace -- -D warnings
        shell: bash

      - name: Test
        run: cargo test --all-features --workspace
        shell: bash

      - name: Nightly Test
        run: cargo test
        shell: bash
        env:
          RUSTFLAGS: '--cfg nightly -Zcrate-attr=feature(variant_count)'
          RUSTUP_TOOLCHAIN: nightly

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Generate Code Coverage
        run: |
          cargo install --version 0.22.0 cargo-tarpaulin
          cargo tarpaulin --all-features --out Xml
        shell: bash

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v3
